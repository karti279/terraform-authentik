apiVersion: v1
kind: Secret
metadata:
  name: authentik-secret
type: Opaque
data:
  secret_key: c2VjcmV0LXRva2Vu  # Make sure this is a strong base64 encoded secret key

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authentik-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: "gp2"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik
  template:
    metadata:
      labels:
        app: authentik
    spec:
      containers:
        - name: authentik
          image: ghcr.io/goauthentik/server:latest
          env:
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: "postgres-service"  # Make sure 'postgres-service' is correct
            - name: AUTHENTIK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: secret_key
          volumeMounts:
            - mountPath: "/media"
              name: media-storage
          readinessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: media-storage
          persistentVolumeClaim:
            claimName: authentik-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: authentik-service
spec:
  selector:
    app: authentik
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
  type: LoadBalancer
